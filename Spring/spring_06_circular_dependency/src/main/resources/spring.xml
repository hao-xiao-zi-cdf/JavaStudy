<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--    singleton及set方法注入情况下，观察循环依赖会不会出现问题？-->
<!--    spring解析配置文件，实例化出husbandBean对象，由于bean对象的作用范围是singleton,spring容器
        会立即对其进行“曝光”，“曝光”指的是bean对象创建出来后，在设置属性之前，声明这个bean对象可以拿去使用
        之后对其进行属性赋值，发现wife对象还未创建，就回去创建bean对象，由于该对象也是bean对象也是singleton
        所以也对其进行曝光，可以被使用，属性赋值，完整的wife对象初始化完成，回到husband对象继续完成后续属性赋值-->
    <bean id="husbandBean" class="com.hao_xiao_zi.spring.bean.Husband" scope="singleton">
        <property name="name" value="张三"/>
        <property name="wife" ref="wifeBean"/>
    </bean>

    <bean id="wifeBean" class="com.hao_xiao_zi.spring.bean.Wife" scope="prototype">
        <property name="name" value="李四"/>
        <property name="husband" ref="husbandBean"/>
    </bean>

<!--    spring容器解析配置文件，实例化husbandBean对象，由于scope=prototype，不会进行曝光
        进行属性赋值，由于没有wifeBean对象，去创建wifeBean对象，由于也是prototype对象，也不会曝光
        进行属性赋值，由于没有husbandBean对象，会去创建husbandBean对象，这样就会不限递归下去，
        因为两个对象都在完成实例化后进行曝光
        解决办法:让其中一个scope=singleton-->
</beans>